// <auto-generated />
using Book_Shop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book_Shop.Migrations
{
    [DbContext(typeof(BookShopDbContext))]
    [Migration("20250829164620_Update-Database-Book")]
    partial class UpdateDatabaseBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Book_Shop.Data.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Joanne",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "George",
                            LastName = "Martin"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "J.R.R.",
                            LastName = "Martin"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        });
                });

            modelBuilder.Entity("Book_Shop.Data.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrilogiesId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TrilogiesId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Published by Allen & Unwin",
                            Genre = "Fantasy",
                            NumberOfPages = 1178,
                            Price = 20,
                            Title = "The Lord of the Rings",
                            TrilogiesId = 1,
                            Year = 1954
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Description = "Published by Allen & Unwin",
                            Genre = "Fantasy",
                            NumberOfPages = 310,
                            Price = 15,
                            Title = "The Hobbit",
                            TrilogiesId = 1,
                            Year = 1937
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Description = "Published by Allen & Unwin",
                            Genre = "Fantasy",
                            NumberOfPages = 365,
                            Price = 25,
                            Title = "The Silmarillion",
                            TrilogiesId = 1,
                            Year = 1977
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Description = "Published by Bloomsbury",
                            Genre = "Fantasy",
                            NumberOfPages = 223,
                            Price = 18,
                            Title = "Harry Potter and the Philosopher's Stone",
                            TrilogiesId = 2,
                            Year = 1997
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Description = "Published by Bloomsbury",
                            Genre = "Fantasy",
                            NumberOfPages = 251,
                            Price = 20,
                            Title = "Harry Potter and the Chamber of Secrets",
                            TrilogiesId = 2,
                            Year = 1998
                        });
                });

            modelBuilder.Entity("Book_Shop.Data.Entities.Trilogies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameTrilogie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trilogies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameTrilogie = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 2,
                            NameTrilogie = "Harry Potter"
                        },
                        new
                        {
                            Id = 3,
                            NameTrilogie = "A Song of Ice and Fire"
                        },
                        new
                        {
                            Id = 4,
                            NameTrilogie = "The Chronicles of Narnia"
                        },
                        new
                        {
                            Id = 5,
                            NameTrilogie = "The Hunger Games"
                        });
                });

            modelBuilder.Entity("Book_Shop.Data.Entities.Book", b =>
                {
                    b.HasOne("Book_Shop.Data.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Book_Shop.Data.Entities.Trilogies", "Trilogies")
                        .WithMany("Books")
                        .HasForeignKey("TrilogiesId");

                    b.Navigation("Author");

                    b.Navigation("Trilogies");
                });

            modelBuilder.Entity("Book_Shop.Data.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Book_Shop.Data.Entities.Trilogies", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
